[ { "title": "Tú sabes ¿qué es la programación?", "url": "/posts/tu-sabes-que-es-la-programacion/", "categories": "programacion, tutoriales", "tags": "programacion, tutoriales", "date": "2022-08-27 21:30:00 -0500", "snippet": " La programación en realidad es simple, solo se trata de darle instrucciones a una computadora para que haga lo que queremos que haga.Photo by Nicole Wolf on UnsplashLa programación se trata de meter datos en la computadora, y esperar la salida de estos cuando ya han sido trabajados dentro de la máquina.Por ejemplo, Microsoft Word, metes unos datos, (es decir las letras que escribes en el teclado), después la computadora hace lo suyo y esperas que en tu monitor se vean reflejadas palabras. Bueno esa es la base de todo en la programación.Entrada de datos -&gt; La computadora hace su función -&gt; ResultadoLas computadoras son herramientas y como tales fueron creadas para facilitarnos la vida (y la comunicación), de hecho ya hay miles de programas que nos facilitan mucho las tareas cotidianas de nuestro mundo moderno, por ejemplo la calculadora de Windows, nos ayuda mucho a la hora de hacer operaciones matemáticas, las alarmas de tu celular, que te ayudan a despertar a la hora que necesitas despertar (Si, aunque a veces las odiemos), pero para algunas cosas es posible que no existan los programas que necesites.Aquí es donde entra la programación.Programar en ocasiones puede ser frustrante y en otras ocasiones gratificante, lo que es una constante aquí es que al igual que las matemáticas, ayuda a tu cerebro a ejercitarse, ejercita el pensamiento abstracto, ejercita el razonamiento lógico, entre otras cosas, es por eso que talvez has escuchado la frase: “Todo el mundo debería aprender a programar”.Lenguajes de programaciónPara poder darle órdenes a una computadora es esencial que te entienda; de otra forma, sería como gritarle a tu perro que vaya a la tienda por una cerveza y que te la sirva en tu tarro favorito. Para esto se inventaron los lenguajes de programación, que es la forma más amigable de tener una “conversación” con tu computadora, recuerda que estas máquinas solo entienden de unos y ceros, así que entablar una conversación a base de código binario seria por decirlo de una manera educada, WTF!!.Existen lenguajes de alto y de bajo nivel, (No, no estoy siendo elitista o clasista) esto se refiere a, que tan cerca o lejos está de los unos y ceros dicho lenguaje de programación, por ejemplo, el lenguaje de más bajo nivel por excelencia es Assembly, este lenguaje es muy difícil de aprender para los programadores, pero para la máquina es sumamente fácil, en cambio Python es un lenguaje de alto nivel que utiliza palabras como if, and, for, else, etc. para poder comunicar el mensaje a la máquina, es decir mientras más alto nivel sea el lenguaje de programación, más abstracción tiene, en pocas palabras, es incomprensible para la computadora, pero para ti que eres humano (Eso espero) es más sencillo entender. Y sí, necesitas Inglés para poder programar, por lo menos un poquito, si entendiste las palabras que escribí arriba, vas por buen camino.También existen los Paradigmas de programación, como, imperativa, declarativa, orientada a objetos, funcional, estructurada, entre otras, pero si estás empezando, no te preocupes, solo concéntrate en - tipos de datos, variables, condiciones, ciclos y funciones de tu lenguaje favorito, pues estos conceptos son los más básicos y se aplican a cualquier lenguaje de programación.Lógica de programaciónBueno como dije anteriormente lo más básico en la programación se aplica a cualquier lenguaje, iniciando con los tipos de datos que puedes usar en tu lenguaje favorito y las variables para almacenar estos datos, por ejemplo: String o Cadena de caracteres// Variable llamada name que almacena en memoria un string \"ricardo\"let name = \"ricardo\" Number o número, enteros y decimales# Variable money que almacena en memoria el number 100money = 100 Condicionaleslet x = 100let y = 99// Con la condicion if preguntamos si 99 es menor que 100,// si es verdad que imprima en pantalla el string \"verdadero\"if (y &lt; x) console.log(\"verdadero\") Ciclos# Litas, es decir un lugar en memoria que almacena varios datos.my_list = [1, 2, 3]# Con el ciclo for, pedimos que se imprima cada uno de los numbers# de la variable my_listfor number in my_list: print(number) Funciones// Funcion hello que pide un nombre con el tipo de dato string// para imprimir un saludo personalizadofunction hello(name: string) { console.log(\"hello \" + name)}// Pasamos el string \"Ricardo\" a la funcion que nos pide un nombrehello(\"Ricardo\")// Esto nos da como resultado - Hello Ricardo Y así de fácil es iniciar tu viaje en la programación espero que esta pequeña introducción te guste y te anime a seguir aprendiendo y divirtiéndoteDisclaimerLo aquí expuesto es solo una pequeña parte del mundo tan complejo de lo que es la programación, espero te ayude al menos un poco si estás iniciando o estás interesado en aprender a programar." }, { "title": "En el principio… fue la línea de comandos", "url": "/posts/al-principio-fue-la-linea-de-comandos/", "categories": "linux, linea_de_comandos", "tags": "linux, linea_de_comandos", "date": "2022-08-26 22:30:00 -0500", "snippet": "Photo by Fotis Fotopoulos on Unsplash Para poder hablar de las interfaces de usuario, primero me gustaría aclarar que es una línea de comandos y una interfaz gráfica, así los menos experimentados tendrán un buen contexto para entender el siguiente post.¿Qué es CLI y GUI?La Terminal, Consola, Shell, Bash, o cualquier otro nombre que se le dé a la línea de comandos o CLI (Command Line Interface) no es otra cosa que uno de los métodos primigenios en que un usuario interactúa con una computadora, por decirlo de una forma muy sencilla.Esto nos permite listar, eliminar, crear y modificar ficheros, acceder a servidores con SSH, tener el control de las redes de internet en nuestra computadora, lanzar o terminar procesos, entre muchas otras cosas.A diferencia de la GUI (Graphical User Interface) o interfaz gráfica de usuario, solo nos permite abrir y cerrar ventanas, así como submenús de estas mismas y mover el cursor del mouse de un lado para el otro como un dedo virtual acusador. Aunque claro, si te gustan los shooters o usar programas de Adobe o CAD veo algo complicado que te puedas desempeñar adecuadamente solo con la línea de comandos. En cierto modo se abusa del poder de la metáfora para hacer más accesible la interacción humano/máquina, esto limita a los usuarios solo a las funciones que se pueden hacer con un mouse.Origen de las interfaces de usuarioEn los primeros tiempos de la informática, las computadoras no tenían GUI con escritorio, carpetas, puntero de mouse, iconos y todo lo que conocemos hoy en día.En los años 60s y 70s, existían las tarjetas perforadas, que fue una de las primeras formas de interacción humano ordenador, para esto se usaba y se sigue usando el lenguaje escrito que es la forma más fácil de comunicación, recordemos que todo en el mundo de las computadoras se trata de comunicación.En 1984 Mac y en 1985 Windows, sacaron su interfaz gráfica iniciando la era de las ventanas, esto se traduciría en un ambiente más amigable para la mayoría de personas.¿Te has dado cuenta como las interfaces gráficas simulan una oficina? Tienes tu escritorio, tu bote de basura para los archivos que vas desechando como si fueran hojas de papel, también muchos iconos son artículos de oficina, de hecho, Windows tiene su famoso Office que es una colección de herramientas para, bueno… oficina.Como simple curiosidadLos usuarios de Mac acusan a los usuarios de Microsoft de que Windows (su mayor éxito) es una copia de la interfaz gráfica de Mac, pero se olvidan que la manzana fue la primera en copiar el invento de Xerox llamado WIMP, Ventanas, Iconos Menús y Punteros por sus siglas en inglés y por sus principales componentes, y adivina qué, este es el verdadero origen de lo que ahora conocemos como la interfaz gráfica de usuario.DisclaimerUtilicé el título de un libro que he leído varias veces por lo entretenido e informativo que resulta, además fue la inspiración para crear este pequeño post.En el principio fue la línea de comandos" }, { "title": "Como convertise en Hacker", "url": "/posts/como-convertirse-en-hacker/", "categories": "linux, seguridad_informatica", "tags": "linux, seguridad_informatica", "date": "2022-08-25 21:30:00 -0500", "snippet": "Photo by lilartsy on UnsplashEric S. Raymond uno de los hackers más importantes de la historia, escribió un how to para convertirte en un verdadero Hacker, he aquí un resumen de este maravilloso textoResumen de How To Become A Hacker Jargon File tiene muchas definiciones de lo que es un Hacker, muchas tienen que ver con lo técnico, con la capacidad de solucionar problemas y disfrutar al hacerlo.Existe una comunidad, una cultura compartida de programadores expertos y brujos de redes, su historia viene de décadas atrás, los miembros de esta comunidad acuñaron la palabra Hacker, los Hackers construyeron Internet, hicieron del sistema Unix lo que es, los Hackers hacen que funcione WWW, si eres parte de esta cultura, si has contribuido a ella, entonces eres un Hacker.La mentalidad de Hacker no solo se refiere a Software, puedes encontrarlos en cualquier ciencia o arte como en la electrónica, en la música y un sin fin de actividades, los Hackers en Software reconocen estos espíritus emparentados y los denomina Hackers también, algunos sostienen que la naturaleza del Hacker es en realidad independiente del medio particular en donde se desenvuelven.Existe otro grupo de personas que a gritos se denominan Hackers, pero no lo son, se divierten ingresando ilegalmente en computadoras y estafando al sistema de telefonía, los Hackers de verdad tienen un nombre para estas personas, Crackers y no quieren tener nada con ellos, ser capaz de romper la seguridad informática no los hace ser Hackers, al igual que ser capaz de encender un auto con un puente en la llave no te hace un ingeniero automotriz, desafortunadamente la mayoría utilizan erróneamente la palabra Hacker para describir a los Crackers; Y esto es causa de enorme irritación para los verdaderos Hackers. Los Hackers construyen cosas, los Crackers las destruyen.Si quieres ser un Hacker continúa leyendo, si quieres ser un Cracker prepárate para la dura realidad al descubrir que no eres tan inteligente como crees.La actitud del HackerLos Hackers construyen cosas, creen en la libertad y en la ayuda mutua, si quieres ser uno de ellos debes de comportarte como uno de ellos, debes de adoptar dicha actitud. Por lo tanto, si quieres ser un Hacker, repite lo siguiente hasta que lo creas:El mundo está lleno de problemas fascinantes que esperan ser resueltosEs divertido ser un Hacker, pero es esa diversión que requiere mucho esfuerzo, para ser un Hacker debes sentir un estremecimiento de tipo primitivo cuando resuelves un problema, afila tus habilidades, ejercita tu inteligencia.Además, debes desarrollar cierta clase de fe en tu propia capacidad de aprendizaje, la creencia de que aun cuando puedas no saber todo lo que necesitas para resolver un problema, si tomas una parte de él y aprendes desde allí, aprenderás lo suficiente para resolver la siguiente parte y la siguiente parte hasta que lo resuelvas por completo.Nadie debería tener que resolver un problema dos veces No debes desperdiciar energía reinventando la rueda, cuando hay tantos y tan fascinantes problemas nuevos esperando.Para comportarte como Hacker debes pensar que el tiempo empleado por los demás Hackers es valioso, tanto que es casi una obligación moral compartir la solución que has encontrado a los problemas con los que has lidiado, de manera que los otros Hackers, puedan resolver nuevos problemas, en lugar de enfrentarse perpetuamente a los viejos problemas.No pienses que estás obligado a regalar todo tu producto creativo, se considera consistente con los valores de un Hacker vender lo suficiente para vivir, incluso para hacerte rico, siempre que no te olvides que eres un Hacker mientras lo haces.La libertad es buenaLos Hackers son naturalmente antiautoritarios. Cualquiera que te pueda dar órdenes, puede hacer que dejes de resolver ese problema con el cual estás ocupado, por eso la actitud autoritaria debe de ser combatida, pues si se deja, te asfixiará, tanto a ti como a los otros Hackers.Esto no es lo mismo que combatir la autoridad, los niños necesitan guía, los criminales límites y lineamientos, además de restricciones.Para comportarte como Hacker debes de desarrollar una hostilidad a la censura y el secreto, la utilización de la fuerza o el fraude para someter a adultos responsables.La actitud no es sustituto para la habilidadPara lograr ser un Hacker debes de desarrollar estas actitudes, pero la actitud por sí sola no te transformará en Hacker, tampoco la actitud por si sola te transformará en un atleta, o en una estrella de rock, también necesitas inteligencia, paciencia, dedicación y trabajo duro.Por lo tanto, respeta la habilidad en todas sus formas, especialmente buenas son las habilidades exigentes y que pocos pueden dominar, las mejores son las que involucran agudeza mental, maña y concentración.Habilidades básicas de un Hacker Existe un conjunto de herramientas básicas que debes dominar, este conjunto cambia lentamente a lo largo del tiempo a medida que tecnología nueva se va creando, al igual que nuevas habilidades, a este conjunto se debe incluir lo siguiente:Aprende programaciónProgramar es por supuesto es la habilidad fundamental del Hacker, si no conoces ningún lenguaje de programación, te recomiendo comenzar con Python, está limpiamente diseñado, bien documentado y relativamente agradable para los principiantes, pero no lo subestimes porque es muy poderoso, flexible y se adapta perfectamente a proyectos grandes.No creas que podrás ser un Hacker o siquiera un programador con un solo lenguaje de programación, debes pensar en los problemas de programación de una manera en general e independiente de cualquier lenguaje. Cada nuevo lenguaje que aprendas te educara de maneras muy importantesNo puedo explicar en detalle en este documento como puedes aprender a programar, es una habilidad compleja, pero te puedo decir que la mayoría de los mejores Hackers son autodidactas, también te sugiero leer mucho código y escribir mucho código, esto te dará la habilidad necesaria.Antes era difícil encontrar código para leer, esta situación ha cambiado drásticamente, Software libre, herramientas de programación libres y sistemas operativos, están ampliamente disponibles en la actualidad; Intenta buscar en GitHubObtén una distribución Linux y aprende a usarla El paso más importante que un novato puede dar es obtener una copia de Linux, instalarlo en una maquina personal y aprender a usarlo.Puedes aprender a usar internet sin saber usar Linux, pero no puedes ser un Hacker sin conocer Linux. Anímate, comunícate en Internet mediante el, lee código, modifícalo, este sistema incluye mejores herramientas de programación de lo que cualquier sistema operativo Microsoft pueda soñar, además te divertirás, te sumergirás en conocimientos de tal magnitud, hasta que, en cierto tiempo, mirando hacia atrás, te darás cuenta de que ya eres un maestro Hacker consumado.Aprende WWW y a escribir HTMLLa Web es el juguete de los Hackers tan enorme y brillante que incluso políticos admiten que está cambiando el mundo, por esta y muchas más razones debes de aprender como trabajar en WWW.Cualquiera puede aprender a usar un navegador web, tú debes de aprender a escribir HTML, el lenguaje de WWW, si todavía no sabes, su aprendizaje te enseñara hábitos mentales que te ayudaran con la programación. Así que crea tu página personal.Pero no creas que por tener una página personal estás más cerca de ser un Hacker, para que valga la pena, tu página debe de tener contenido, debe de ser interesante y útil para los demás Hackers.Status en la cultura Hacker Existen básicamente cinco clases de cosas que puedes hacer para obtener el respeto de los Hackers: Escribir Software Libre Ayudar a crear y depurar Software Libre Publicar información útil Ayudar a mantener la infraestructura Hacer algo por la cultura Hacker en sí mismaCuestiones de estilo De nuevo para ser un Hacker debes desarrollar la mentalidad del Hacker, pero existen algunas cosas que puedes hacer cuando estás sin computadora que te pueden ayudar, muchos Hackers las realizan, y sienten que de alguna manera se conectan con la esencia de la actividad de Hackear. Lee ciencia ficción Practica artes marciales Desarrolla oído analítico para la música Desarrolla tu inclinación por el doble sentido y el juego de palabras Aprende a escribir correctamente en tu lengua nativaFinalmente, unas pocas cosas que no debes de hacer. No uses nombres de usuario espectaculares o tontos No te metas en guerras santas en Internet, ni en ningún otro lado No te autodenomines ‘Cyberpunk’ ni pierdas tiempo con nadie que lo haga No escribas correos electrónicos o artículos con muchos errores de tipeo, ortografía o construcciones gramaticales incorrectas Para ser Hacker necesitas motivación, iniciativa y la capacidad para educarte a ti mismo. Comienza ahoraEric S. Raymond esr@thyrsus.comDisclaimerEl texto aquí presentado es un resumen del artículo escrito por Eric S. Raymond en Jargon File espero que haya sido de utilidad, dejo el Texto original para completar esta lectura.Mi único objetivo es extender el conocimiento, sin ofender o desvirtuar a nadie." }, { "title": "La historia de GNU/Linux", "url": "/posts/la-historia-de-gnulinux/", "categories": "linux, sistemas_operativos", "tags": "linux, historia", "date": "2022-08-24 23:30:00 -0500", "snippet": "Photo by Wesley Pribadi on Unsplash Las recetas son como los programas informáticos. Hay reglas, pasos a seguir y también lineamientos que nos dicen en qué momento inicia y en qué momento termina la receta para obtener un resultado final. Así que, si te gusta cocinar, compartes tus recetas con amigos para que ellos las prueben e incluso pueden modificarlas a su gusto, ahora imagina un mundo donde alguien ha dictado que no puedes modificar las recetas y si llegas a hacerlo eres un delincuente que tendría que estar en la cárcel.Richard Stallman¿Qué es Linux?, ¿por qué a veces se le llama GNU/Linux, o en ocasiones solo Debian o Ubuntu o Fedora? ¿Por qué Linux? Uno se formula este tipo de preguntas cada vez que se menciona el sistema operativo del pingüino, pero no te preocupes hoy voy a aclarar el panorama para que la próxima vez que alguien mencione algo relacionado a este sistema operativo, tú le puedas dar una pequeña cátedra al respecto.1969 el año que cambio la historiaEl inicio de Internet ARPANET, Los primeros pasos del hombre a la luna, el festival Woodstock, el nacimiento de Linus Torvalds y por supuesto, el lanzamiento de Unix el Padre de los sistemas operativos, todo esto sorprendentemente paso en el mismo año.Dennis Ritchie y Ken Thompson trabajadores de los Laboratorios Bell, desarrollaron un OS Operating System o Sistema operativo, el cual estaba basado en Multics, el cual podía mantener información con diferentes niveles de confidencialidad en una sola máquina utilizando permisos, también trajo algunas curiosidades más que se mantienen en los OS modernos, agregaron un sistema de ficheros y muchos mini programas con funciones muy puntuales que se podían unir para crear otras funciones más complejas, todo esto llamo fuertemente la atención de cientos de Hackers.Pronto se convirtió en el SO preferido de universidades y grandes compañías, además contaba con una licencia para computadoras personales, el problema aquí es que la licencia era exageradamente cara y los estudiantes no podían pagar algo así.Richard Stallman el que inicio la revoluciónEsto y algunos acontecimientos en la vida estudiantil de Richard Stallman lo llevaron a crear la revolución más grande respecto a software de todos los tiempos, Así que en 1983 después de dejar la universidad lanzo GNU, acrónimo recursivo de GNU is Not Unix, es decir GNU no es UNIX, un grito que iba en contra de la regla definida de aquel entonces.Por su lado Microsoft y Apple vendian Software privativo y Hardware estilizado pero caro y totalmente sellado respectivamente.El movimiento de Stallman pronto reunió a cientos de apasionados desarrolladores de todo el mundo, creando pequeñas herramientas y funcionalidades para incorporarlas a un proyecto casi imposible, construir un OS completo y desde cero, el cual era libre tanto modificar como compartir a todo el que lo quisiera, al igual que todas las herramientas que ya habían desarrollado, a estos desarrolladores, hackers e ingenieros de todo el mundo se les unió un tal Linus Torvalds que no hizo gran cosa, solo crear el componente más importante de todos, el Kernel, el cual junto con su amigo Ari Lemmke nombraron Linux.La uniónGracias a la unión del proyecto GNU y al kernel de Linux, GNU/Linux al igual que el esfuerzo de una comunidad libre y fuertemente unida de desarrolladores conectados solo por sus computadoras y gracias al correo electrónico, se pudo crear lo que ahora es el OS más importante de todos, y esto no lo digo a la ligera pues lo tenemos en todos lados, desde distribuciones como Debian, Red Hat, Ubuntu, Arch, y un largo etc. hasta en la mayoría de servidores en internet e incluso en millones de teléfonos celulares en todo el mundo gracias a Google y su creación Android.DisclaimerEsto ha sido un pequeño resumen de años y años de historia, por lo cual no incluí muchos nombres importantes, eventos, y varias cosas más, si así lo deseas puedes consultar varias fuentes en internet y libros que hablan mucho al respecto.Por lo pronto te dejo un gran documental en YouTube hablando del tema con mucha información que te puede servir, claro si tienes 1 hr. 25 min. libres.También un par de libros que me han ayudado mucho para este post y muchos que vendrán después.Ceros y unosEn el principio fue la línea de comandos" } ]
